{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","className","map","tab","cn","id","every","item","href","onClick","handleTabClick","title","find","content","App","useState","setSelectedTabId","active","ReactDOM","render","document","getElementById"],"mappings":"kNASaA,EAAO,SAAC,GAAsD,IAAD,EAAnDC,EAAmD,EAAnDA,KAAMC,EAA6C,EAA7CA,cAAeC,EAA8B,EAA9BA,cAO1C,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKC,UAAU,gBAAf,SACE,6BACGH,EAAKI,KAAI,SAAAC,GACR,OACE,oBAEE,UAAQ,MACRF,UAAWG,IAAG,CACZ,YAAaD,EAAIE,KAAON,GACpBI,EAAIE,KAAOP,EAAK,GAAGO,IACpBP,EAAKQ,OAAM,SAAAC,GAAI,OAAIA,EAAKF,KAAON,OANtC,SASE,mBACES,KAAI,WAAML,EAAIE,IACd,UAAQ,UACRI,QAAS,kBAxBF,SAACN,GAClBA,EAAIE,KAAON,GACbC,EAAcG,GAsBaO,CAAeP,IAHhC,SAKGA,EAAIQ,SAbFR,EAAIE,WAqBnB,qBAAKJ,UAAU,QAAQ,UAAQ,aAA/B,mBACGH,EAAKc,MAAK,SAAAT,GAAG,OAAIA,EAAIE,KAAON,YAD/B,aACG,EAA4Cc,cCtCxCf,EAAO,CAClB,CAAEO,GAAI,QAASM,MAAO,QAASE,QAAS,eACxC,CAAER,GAAI,QAASM,MAAO,QAASE,QAAS,eACxC,CAAER,GAAI,QAASM,MAAO,QAASE,QAAS,gBAG7BC,EAAgB,WAAO,IAAD,EACjC,EAA0CC,mBAASjB,EAAK,GAAGO,IAA3D,mBAAON,EAAP,KAAsBiB,EAAtB,KAMA,OACE,sBAAKf,UAAU,UAAf,UACE,qBAAIA,UAAU,QAAd,4BAEG,IAFH,UAGGH,EAAKc,MAAK,SAAAT,GAAG,OAAIA,EAAIE,KAAON,YAH/B,aAGG,EAA4CY,SAE/C,cAAC,EAAD,CACEb,KAAMA,EACNC,cAAeA,EACfC,cAdgB,SAACiB,GACrBD,EAAiBC,EAAOZ,WCd5Ba,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.d282d8e3.chunk.js","sourcesContent":["import cn from 'classnames';\nimport { Tab } from '../../types';\n\ntype TabsProp = {\n  tabs: Tab[],\n  selectedTabId: string,\n  onTabSelected: (active: Tab) => void,\n};\n\nexport const Tabs = ({ tabs, selectedTabId, onTabSelected }: TabsProp) => {\n  const handleTabClick = (tab: Tab) => {\n    if (tab.id !== selectedTabId) {\n      onTabSelected(tab);\n    }\n  };\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => {\n            return (\n              <li\n                key={tab.id}\n                data-cy=\"Tab\"\n                className={cn({\n                  'is-active': tab.id === selectedTabId\n                  || (tab.id === tabs[0].id\n                  && tabs.every(item => item.id !== selectedTabId)),\n                })}\n              >\n                <a\n                  href={`#${tab.id}`}\n                  data-cy=\"TabLink\"\n                  onClick={() => handleTabClick(tab)}\n                >\n                  {tab.title}\n                </a>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {tabs.find(tab => tab.id === selectedTabId)?.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './types';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0].id);\n\n  const onTabSelected = (active: Tab) => {\n    setSelectedTabId(active.id);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        Selected tab is\n        {' '}\n        {tabs.find(tab => tab.id === selectedTabId)?.title}\n      </h1>\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={onTabSelected}\n      />\n\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}